.PHONY: itests tests install all
SHELL ?= sh
PREFIX ?= /usr/local

TESTS ?= tests
CRAM_OPTS ?= -v

PROJECT ?= $(CURDIR)
BIN ?= ${PROJECT}/bin
ZSH_VERSION ?= zsh-5.3
CONTAINER_IMAGE ?= desyncr/zsh-docker-

TARGET ?= ${BIN}/antigen.zsh
SRC ?= ${PROJECT}/src
GLOB ?= ${SRC}/boot.zsh ${SRC}/antigen.zsh $(sort $(wildcard ${PWD}/src/helpers/*.zsh)) \
        ${SRC}/lib/*.zsh $(sort $(wildcard ${PWD}/src/commands/*.zsh)) \
        ${SRC}/_antigen

VERSION_FILE=${PROJECT}/VERSION

BANNER_SEP=$(shell printf '%*s' 70 | tr ' ' '\#')
BANNER_TEXT=This file was autogenerated by \`make\`. Do not edit it directly!
BANNER=${BANNER_SEP}\n\# ${BANNER_TEXT}\n${BANNER_SEP}\n

define ised
	sed $(1) $(2) > "$(2).1"
	mv "$(2).1" "$(2)"
endef

build:
	@printf "${BANNER}" > ${BIN}/antigen.zsh
	for src in ${GLOB}; do echo "$$src"; cat "$$src" >> ${TARGET}; done
	$(call ised,"s/{{ANTIGEN_VERSION}}/$$(cat ${VERSION_FILE})/",${TARGET})

release:
	# Move to release branch
	git checkout develop
	git checkout -b release/$(version)
	# Update version references in README.md
	$(call ised, "s/$$(cat ${VERSION_FILE})/$(version)/",README.mkd)
	# Update release version
	echo "$(version)" > ${VERSION_FILE}
	# Make build and tests
	make build && make tests
	# Update changelog
	${EDITOR} CHANGELOG.md
	# Build release commit
	git add CHANGELOG.md ${VERSION_FILE} README.mkd ${TARGET}
	git commit -S -m "Build release $(version)"

publish:
	git push origin release/${VERSION}
	# Merge release branch into develop before deploying

deploy:
	git checkout develop
	git tag -m "Build release ${VERSION}" -s ${VERSION}
	git push upstream ${VERSION}
	git archive --output=${VERSION}.tar.gz --prefix=antigen-$$(echo ${VERSION}|sed s/v//)/ ${VERSION}
	zcat ${VERSION}.tar.gz | gpg --armor --detach-sign >${VERSION}.tar.gz.sign
	# Verify signature
	zcat ${VERSION}.tar.gz | gpg --verify ${VERSION}.tar.gz.sign -

clean:
	rm -f ${PREFIX}/share/antigen.zsh

itests:
	${MAKE} tests CRAM_OPTS=-i

_container:
	docker run --rm --privileged=true -it -v ${PROJECT}:/antigen ${CONTAINER_IMAGE}${ZSH_VERSION} ${COMMAND} 

info:
	${MAKE} _container COMMAND="sh -c 'cat /antigen/VERSION; zsh --version; git --version; env'"

tests:
	${MAKE} _container COMMAND="sh -c 'ZDOTDIR=/antigen/tests cram ${CRAM_OPTS} --shell=zsh /antigen/${TESTS}'"

stats:
	${MAKE} _container COMMAND="/antigen/tools/stats --zsh zsh --antigen /antigen"

install:
	mkdir -p ${PREFIX}/share && cp ${TARGET} ${PREFIX}/share/antigen.zsh

deps:
	sudo pip install cram=='0.6.*'

all: clean build install
